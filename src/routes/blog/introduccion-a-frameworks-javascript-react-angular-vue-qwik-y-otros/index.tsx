import { component$ } from '@builder.io/qwik';
import { Link, type DocumentHead } from '@builder.io/qwik-city';
import { Button } from '~/components/ui';
import { LuArrowLeft } from '@qwikest/icons/lucide';

export default component$(() => {
    return (
        <>
            <Button
                look="link"
                class="mb-8"
            >
                <Link
                    href="/blog"
                    class="flex items-center"
                >
                    <LuArrowLeft class="h-5 w-5" />
                    <span>Volver al Blog</span>
                </Link>
            </Button>
            <main class="mt-8 mb-24 px-4">
                <article class="prose lg:prose-xl">
                    <h1 class="text-4xl font-bold mb-4">
                        üìö Introducci√≥n a Frameworks JavaScript: React, Angular, Vue, Qwik, y otros
                    </h1>
                    <p>
                        El ecosistema de JavaScript ha evolucionado enormemente en la √∫ltima d√©cada, dando lugar a una variedad de frameworks y bibliotecas que facilitan el desarrollo de aplicaciones web din√°micas e interactivas. En este art√≠culo, exploraremos algunos de los frameworks m√°s populares: <strong>React</strong>, <strong>Angular</strong>, <strong>Vue</strong>, <strong>Qwik</strong>, y otros. Analizaremos sus caracter√≠sticas, ventajas y casos de uso para ayudarte a elegir el m√°s adecuado para tu pr√≥ximo proyecto. üöÄ
                    </p>

                    <h2 class="text-2xl font-semibold mt-8 mb-4">React ‚öõÔ∏è</h2>
                    <p>
                        <strong>React</strong> es una biblioteca de JavaScript para construir interfaces de usuario, creada por Facebook en 2013. Su enfoque se basa en componentes reutilizables y un flujo de datos unidireccional. Es ampliamente utilizado en la industria y ha sido fundamental en la adopci√≥n del desarrollo basado en componentes.
                    </p>
                    <ul class="list-disc list-inside">
                        <li>
                            <strong>Virtual DOM</strong>: React utiliza un DOM virtual para mejorar el rendimiento al actualizar solo los componentes que cambian, reduciendo las manipulaciones directas del DOM real.
                        </li>
                        <li>
                            <strong>JSX</strong>: Combina HTML y JavaScript en un solo archivo, facilitando la escritura y comprensi√≥n de componentes.
                        </li>
                        <li>
                            <strong>Comunidad y Ecosistema</strong>: Amplia comunidad, numerosos recursos y una gran cantidad de bibliotecas complementarias, como React Router y Redux.
                        </li>
                    </ul>
                    <p>
                        Adem√°s, React es altamente flexible y puede integrarse con otras bibliotecas o frameworks, lo que lo hace adecuado para una amplia variedad de proyectos, desde peque√±as aplicaciones hasta grandes plataformas empresariales.
                    </p>
                    <p>Ejemplo b√°sico de un componente en React:</p>
                    <pre class="bg-gray-100 p-4 rounded-md overflow-x-auto">
                        <code class="language-js">
                            {`import React from 'react';

function HelloWorld() {
  return <h1>¬°Hola, mundo!</h1>;
}

export default HelloWorld;`}
                        </code>
                    </pre>

                    <h2 class="text-2xl font-semibold mt-8 mb-4">Angular üÖ∞Ô∏è</h2>
                    <p>
                        <strong>Angular</strong>, desarrollado por Google, es un framework completo para construir aplicaciones web de una sola p√°gina (SPA). Lanzado inicialmente en 2010 como AngularJS, fue reescrito completamente en 2016 (Angular 2+) para mejorar el rendimiento y la modularidad.
                    </p>
                    <ul class="list-disc list-inside">
                        <li>
                            <strong>TypeScript</strong>: Angular est√° escrito en TypeScript, proporcionando tipado est√°tico y caracter√≠sticas orientadas a objetos, lo que ayuda a detectar errores en tiempo de compilaci√≥n.
                        </li>
                        <li>
                            <strong>Arquitectura MVC</strong>: Sigue el patr√≥n Modelo-Vista-Controlador, separando claramente la l√≥gica de negocio de la presentaci√≥n.
                        </li>
                        <li>
                            <strong>Inyecci√≥n de Dependencias</strong>: Angular tiene un sistema robusto de inyecci√≥n de dependencias para mejorar la modularidad y la testabilidad del c√≥digo.
                        </li>
                    </ul>
                    <p>
                        Angular es ideal para aplicaciones a gran escala donde se requiere una estructura s√≥lida y un conjunto completo de herramientas integradas. Su CLI facilita la generaci√≥n de componentes y servicios, acelerando el desarrollo.
                    </p>
                    <p>Ejemplo b√°sico de un componente en Angular:</p>
                    <pre class="bg-gray-100 p-4 rounded-md overflow-x-auto">
                        <code class="language-typescript">
                            {`import { Component } from '@angular/core';

@Component({
  selector: 'app-hello-world',
  template: '<h1>¬°Hola, mundo!</h1>',
})
export class HelloWorldComponent {}`}
                        </code>
                    </pre>

                    <h2 class="text-2xl font-semibold mt-8 mb-4">Vue.js üññ</h2>
                    <p>
                        <strong>Vue.js</strong> es un framework progresivo para construir interfaces de usuario, creado por Evan You en 2014. Combina lo mejor de React y Angular en un paquete ligero y f√°cil de usar. Vue es conocido por su enfoque incrementable, permitiendo a los desarrolladores adoptarlo gradualmente en proyectos existentes.
                    </p>
                    <ul class="list-disc list-inside">
                        <li>
                            <strong>Facilidad de Aprendizaje</strong>: Sintaxis intuitiva y documentaci√≥n clara, ideal para principiantes y proyectos que requieren una curva de aprendizaje suave.
                        </li>
                        <li>
                            <strong>Reactividad</strong>: Sistema reactivo eficiente que actualiza el DOM autom√°ticamente cuando cambian los datos, mejorando la experiencia del usuario.
                        </li>
                        <li>
                            <strong>Escalabilidad</strong>: Puede usarse para proyectos peque√±os y ampliarse para aplicaciones complejas gracias a su ecosistema de herramientas como Vuex y Vue Router.
                        </li>
                    </ul>
                    <p>
                        Vue.js ha ganado popularidad por su equilibrio entre simplicidad y funcionalidad, ofreciendo una alternativa ligera a otros frameworks m√°s pesados.
                    </p>
                    <p>Ejemplo b√°sico de un componente en Vue.js:</p>
                    <pre class="bg-gray-100 p-4 rounded-md overflow-x-auto">
                        <code class="language-html">
                            {`<template>
  <h1>¬°Hola, mundo!</h1>
</template>

<script>
export default {
  name: 'HelloWorld',
};
</script>`}
                        </code>
                    </pre>

                    <h2 class="text-2xl font-semibold mt-8 mb-4">Qwik üåê</h2>
                    <p>
                        <strong>Qwik</strong> es un framework emergente que se centra en la entrega instant√°nea de aplicaciones web, minimizando la carga y ejecuci√≥n de JavaScript. Fue creado por Mi≈°ko Hevery, el fundador de Angular, con el objetivo de resolver los problemas de rendimiento asociados con la hidrataci√≥n en aplicaciones renderizadas en el servidor.
                    </p>
                    <ul class="list-disc list-inside">
                        <li>
                            <strong>Reanudabilidad</strong>: Permite que las aplicaciones se reanuden en el cliente sin necesidad de hidrataci√≥n, lo que significa que la aplicaci√≥n es interactiva inmediatamente.
                        </li>
                        <li>
                            <strong>JavaScript bajo demanda</strong>: Descarga y ejecuta solo el c√≥digo necesario cuando el usuario interact√∫a, reduciendo significativamente el tiempo de carga inicial.
                        </li>
                        <li>
                            <strong>Alto Rendimiento</strong>: Optimizado para tiempos de carga r√°pidos y excelente experiencia de usuario, especialmente en dispositivos m√≥viles y conexiones lentas.
                        </li>
                    </ul>
                    <p>
                        Qwik es especialmente √∫til para aplicaciones que requieren el mejor rendimiento posible y buscan minimizar la cantidad de JavaScript que se env√≠a al cliente.
                    </p>
                    <p>Ejemplo b√°sico de un componente en Qwik:</p>
                    <pre class="bg-gray-100 p-4 rounded-md overflow-x-auto">
                        <code class="language-tsx">
                            {`import { component$ } from '@builder.io/qwik';

export const HelloWorld = component$(() => {
  return <h1>¬°Hola, mundo!</h1>;
});`}
                        </code>
                    </pre>

                    <h2 class="text-2xl font-semibold mt-8 mb-4">Otros Frameworks y Bibliotecas üß©</h2>
                    <p>
                        Adem√°s de los mencionados, existen otros frameworks y bibliotecas que pueden ser adecuados seg√∫n las necesidades de tu proyecto:
                    </p>
                    <ul class="list-disc list-inside">
                        <li>
                            <strong>Svelte</strong>: Ofrece una experiencia de desarrollo fluida, compilando los componentes en JavaScript puro, lo que resulta en aplicaciones r√°pidas y ligeras.
                        </li>
                        <li>
                            <strong>Ember.js</strong>: Un framework completo que sigue convenciones estrictas para proyectos de gran escala, proporcionando una estructura s√≥lida.
                        </li>
                        <li>
                            <strong>Preact</strong>: Una alternativa ligera a React con la misma API pero menor tama√±o, ideal para proyectos donde el rendimiento es cr√≠tico.
                        </li>
                        <li>
                            <strong>Lit</strong>: Facilita la creaci√≥n de web components con una sintaxis simple y eficiente, promoviendo la interoperabilidad.
                        </li>
                    </ul>
                    <p>
                        Cada uno de estos frameworks tiene su propia filosof√≠a y enfoque, y es importante evaluarlos en el contexto de los requisitos espec√≠ficos de tu proyecto.
                    </p>

                    <h2 class="text-2xl font-semibold mt-8 mb-4">Comparaci√≥n y An√°lisis üìù</h2>
                    <p>
                        Elegir el framework adecuado depende de varios factores: el tama√±o y complejidad del proyecto, el rendimiento, la curva de aprendizaje y la comunidad de soporte. A continuaci√≥n, se presenta una tabla comparativa:
                    </p>
                    <table class="table-auto w-full text-left mt-4">
                        <thead>
                            <tr>
                                <th class="px-4 py-2">Framework</th>
                                <th class="px-4 py-2">Ventajas</th>
                                <th class="px-4 py-2">Consideraciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="border px-4 py-2">React</td>
                                <td class="border px-4 py-2">Gran comunidad, flexible, amplio ecosistema.</td>
                                <td class="border px-4 py-2">Necesita configuraci√≥n adicional para proyectos grandes.</td>
                            </tr>
                            <tr class="bg-gray-100">
                                <td class="border px-4 py-2">Angular</td>
                                <td class="border px-4 py-2">Framework completo, TypeScript integrado.</td>
                                <td class="border px-4 py-2">Curva de aprendizaje pronunciada, puede ser pesado para proyectos peque√±os.</td>
                            </tr>
                            <tr>
                                <td class="border px-4 py-2">Vue.js</td>
                                <td class="border px-4 py-2">F√°cil de aprender, flexible, documentaci√≥n excelente.</td>
                                <td class="border px-4 py-2">Comunidad m√°s peque√±a que React o Angular.</td>
                            </tr>
                            <tr class="bg-gray-100">
                                <td class="border px-4 py-2">Qwik</td>
                                <td class="border px-4 py-2">Alto rendimiento, carga r√°pida, innovador.</td>
                                <td class="border px-4 py-2">Comunidad emergente, menos recursos disponibles.</td>
                            </tr>
                        </tbody>
                    </table>

                    <h2 class="text-2xl font-semibold mt-8 mb-4">Conclusi√≥n üéØ</h2>
                    <p>
                        Cada framework tiene sus fortalezas y debilidades. <strong>React</strong> es ideal para proyectos que requieren flexibilidad y tienen necesidades cambiantes. <strong>Angular</strong> es adecuado para aplicaciones empresariales de gran escala que se benefician de un framework completo. <strong>Vue.js</strong> es perfecto para quienes buscan una sintaxis sencilla y una curva de aprendizaje suave. <strong>Qwik</strong> se presenta como una opci√≥n interesante para proyectos que priorizan el rendimiento y la experiencia del usuario.
                    </p>
                    <p>
                        La elecci√≥n depender√° de tus necesidades espec√≠ficas, el tama√±o del equipo, los plazos y las preferencias personales. Lo m√°s importante es sentirse c√≥modo con la herramienta y que √©sta se adapte al proyecto. ¬°Explora, experimenta y encuentra el framework que mejor se ajuste a tu visi√≥n! üåü
                    </p>

                    <p>---</p>

                    <p class="mt-8">
                        üí¨{' '}
                        <em>
                            ¬øCu√°l es tu framework favorito y por qu√©? ¬°Comp√°rtelo en Twitter mencion√°ndome{' '}
                            <a
                                href="https://twitter.com/intent/tweet?text=Mi%20framework%20favorito%20es...&hashtags=JSFrameworks&via=sebacc920"
                                target="_blank"
                                rel="noopener noreferrer"
                                class="text-blue-500 hover:underline"
                            >
                                @sebacc920
                            </a>{' '}
                            y usando el hashtag{' '}
                            <a
                                href="https://twitter.com/intent/tweet?text=%23JSFrameworks&hashtags=JSFrameworks&via=sebacc920"
                                target="_blank"
                                rel="noopener noreferrer"
                                class="text-blue-500 hover:underline"
                            >
                                #JSFrameworks
                            </a>
                            !
                        </em>
                    </p>
                </article>
            </main>
            <Button
                look="link"
                class="mb-8"
            >
                <Link
                    href="/blog"
                    class="flex items-center"
                >
                    <LuArrowLeft class="h-5 w-5" />
                    <span>Volver al Blog</span>
                </Link>
            </Button>
        </>
    );
});

export const head: DocumentHead = {
    title: 'Introducci√≥n a Frameworks JavaScript: React, Angular, Vue, Qwik, y otros',
};
